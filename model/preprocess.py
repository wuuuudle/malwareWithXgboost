# API序列预处理成特征，并用决策树进行特征选择
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.ensemble import ExtraTreesClassifier
from sklearn.feature_selection import SelectFromModel
import pandas as pd
import numpy as np


def run():
    data_abnormal = []
    for line in open("data_origin/abnormal.txt", "r"):  # 设置文件对象并读取每一行文件
        data_abnormal.append(line)  # 将每一行文件加入到list中
    data_normal = []
    for line in open("data_origin/normal.txt", "r"):
        data_normal.append(line)

    data = data_abnormal + data_normal

    vectorizer = CountVectorizer(ngram_range=(1, 1))
    vectorizer.fit_transform(data)

    X_abnormal = vectorizer.transform(data_abnormal).toarray()
    Y_abnormal = np.ones(shape=(X_abnormal.shape[0], 1))

    X_normal = vectorizer.transform(data_normal).toarray()
    Y_normal = np.zeros(shape=(X_normal.shape[0], 1))

    X = np.append(X_abnormal, X_normal, axis=0)
    Y = np.append(Y_abnormal, Y_normal, axis=0)
    print(X.shape)
    print(Y.shape)

    clf = ExtraTreesClassifier()
    clf = clf.fit(X, Y)

    model = SelectFromModel(clf, prefit=True)
    X_new = model.transform(X)
    # X_new = X

    feature = pd.DataFrame(X_new)
    feature['label'] = Y
    feature.to_csv('data/integrated_features_dynamic.csv', index=False)
    print(X_new.shape)
